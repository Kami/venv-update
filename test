#!/bin/bash
set -eu
export TOP="$(dirname "$(readlink -f "$0")")"
NCPU=$(getconf _NPROCESSORS_CONF)

if python -c 'import platform; exit(not(platform.python_implementation() == "PyPy"))'; then
    PYPY=true
else
    PYPY=false
fi
SITEPACKAGES="$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")"
if [[ -f $SITEPACKAGES/venv_update.py ]]; then
    INSTALL=$SITEPACKAGES
else
    INSTALL=$TOP
fi

coverage-report() {
    # reporting:
    cd $TOP
    coverage combine
    python ./tests/testing/fix_coverage.py '/site-packages/' $TOP
    unset COVERAGE_PROCESS_START
    coverage combine

    # for unknown reasons, I have to do the fixup again after stopping profiling to avoid stray test results
    python ./tests/testing/fix_coverage.py '/site-packages/' $TOP

    if ${CI:-false}; then
        ./CI/coverage
    fi
    coverage report --fail-under 96
    coverage report --fail-under 100 venv_update.py pip_faster.py
}
fail() {
    if ! $PYPY; then coverage-report; fi
    echo '[31;1mFAIL[m'
}
trap fail ERR


if "${CI:-false}"; then
    # Under CI, we don't get to use all the CPU.
    NCPU=$((NCPU > 5? NCPU/5 : 1))
fi

if [[ "$*" ]]; then
    set -- -n0 "$@"
else
    # default arguments
    set -- $TOP/tests $INSTALL/{venv_update,pip_faster}.py

    # in this case none of our arguments are relative paths
    # let's cd, so that our packaging is checked thoroughly
    set -x
    mkdir -p $TOP/.empty
    cd $TOP/.empty
fi

set -x
# unquoted is intentional. we want to expand words.
set -- ${PYTEST_OPTIONS:-} "$@"
if $PYPY; then
    # coverage under pypy takes too dang long:
    #   https://bitbucket.org/pypy/pypy/issue/1871/10x-slower-than-cpython-under-coverage#comment-14404182
    # pypy can oom on travis; let's use less workers
    py.test -n $NCPU "$@"
else
    # clean up anything left behind from before:
    rm -f $TOP/.coverage $TOP/.coverage.*

    # See: http://nedbatchelder.com/code/coverage/subprocess.html
    export COVERAGE_PROCESS_START=$TOP/.coveragerc

    # run the tests!
    py.test -n $NCPU "$@"
    coverage-report
fi

echo '[37;1;42mSUCCESS[m'
