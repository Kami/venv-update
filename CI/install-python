#!/bin/bash
set -eu
PY="$1"

export PYENV_ROOT="$HOME/.pyenv"
export PYENV_DEBUG=true
CACHE="$HOME/.cache/pyenv"

if ! [[ -d "$PYENV_ROOT" ]]; then
    # make travis look like circleci
    ln -sfn /opt/pyenv "$PYENV_ROOT"
fi
PATH=$PYENV_ROOT/bin:$PATH

# fd 5 is a copy of the original stdout
exec 5>&1

# ensure we have latest pyenv
if ! [[ -d $PYENV_ROOT/plugins/pyenv-update ]]; then
    git clone --depth 1 \
        git://github.com/yyuu/pyenv-update.git \
        $PYENV_ROOT/plugins/pyenv-update
fi
pyenv update

# we always use the highest version on offer from pyenv
LATEST=$(
    pyenv install --list |
        egrep "^  $PY[.-][0-9.]+$" |
        tee /dev/fd/5 |
        tail -1 |
        sed 's/^ *//'
)

set -x

if ! [[ -d "$CACHE/$LATEST" ]]; then
    mkdir -p "$CACHE/"
    if [[ -d "$PYENV_ROOT/versions/$LATEST" ]]; then
        ln -sf  "$PYENV_ROOT/versions/$LATEST" "$CACHE/$LATEST"
    else
        "$PYENV_ROOT/plugins/python-build/bin/python-build" "$LATEST" "$CACHE/$LATEST"
    fi
fi

ln -sfn "$CACHE/$LATEST" ~/python

# some of these come with ancient, broken virtualenvs installed
# we'll just use the system one
~/python/bin/pip uninstall --yes virtualenv || true
